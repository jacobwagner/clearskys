- name: install bonding dependencies
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  apt: pkg={{ item }} state=installed
  with_items:
    - ifenslave-2.6

- name: prevent bond0 from loading
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  lineinfile: dest=/etc/modules regexp='bonding' line='bonding' state=absent

- name: ensure kernel bonding persistence
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  template: src=bonding.conf dest=/etc/modprobe.d/bonding.conf owner=root group=root mode=0644

- name: load kernel bonding
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  modprobe: name=bonding state=present

- name: load kernel bonding
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  command: modprobe bonding mode=active-backup miimon=100 downdelay=200 updelay=200

- name: setup interfaces
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  template: src=interfaces.j2 dest=/etc/network/interfaces owner=root group=root mode=0644

- name: setup interfaces
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  template: src={{ item }}.j2 dest=/etc/sysconfig/network-scripts/{{ item }} owner=root group=root mode=0644
  with_items: centos.configs

- name: restart networking
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  service: name=networking state=restarted
  async: 45
  poll: 0

- name: restart networking
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  service: name=network state=restarted
  async: 45
  poll: 0

- name: add default route
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  command: route add default gw {{ network.gateway }} dev {{ ubuntu.mgmt.bond_name }}

- name: wait for reconnect
  wait_for: delay=10 host={{ inventory_hostname }} port=22
  delegate_to: localhost

- name: flush interfaces
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  command: ip a f {{ ubuntu.ip_iface }}

- name: cycle previous default interface
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  shell: '(ifdown {{ ubuntu.ip_iface }}; ifup {{ ubuntu.ip_iface }}) &'
